if (runBackStage.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
    generateStubs = true
}

android {

    compileSdkVersion sdkVersion

    defaultConfig {
        minSdkVersion miniSdkVersion
        targetSdkVersion targetSdk
        versionCode 1
        versionName "1.0"
        if (runBackStage.toBoolean()) {
            applicationId "com.idic.backstage"
        }
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }

    sourceSets {
        main {
            if (runBackStage.toBoolean()) {
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    androidExtensions {
        experimental = true
    }
}
//repositories {
//    flatDir {
//        dirs 'libs' //this way we can find the .aar file in libs folder
//    }
//}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(path: ':basecommon')
    implementation project(path: ':httpmoudle')
    implementation project(path: ':widgetmoudle')
    implementation project(path: ':utilmoudle')
    implementation project(path: ':serial')
//    implementation(name: 'serial-release', ext: 'aar')
    implementation project(path: ':datamoudle')
//    implementation project(path: ':blinboxHome')
    kapt 'com.alibaba:arouter-compiler:1.2.2'
    //room data
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    // optional - RxJava support for Room
//    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
//    implementation "android.arch.persistence.room:guava:$room_version"

    // Test helpers
//    testImplementation "android.arch.persistence.room:testing:$room_version"

    //下载
    implementation('com.arialyy.aria:aria-core:3.6.6', {
        exclude group: 'com.android.support'
    })
    kapt 'com.arialyy.aria:aria-compiler:3.6.6'


    implementation 'com.kyleduo.switchbutton:library:2.0.0'
    //模糊搜索
    implementation 'com.github.promeg:tinypinyin:2.0.3'

    // TinyPinyin核心包，约80KB
    implementation 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}
repositories {
    mavenCentral()
}
